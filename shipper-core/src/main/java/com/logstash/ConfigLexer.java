// Generated from C:\Users\luca\devel\shipper\shipper-core/antlr/Config.g4 by ANTLR 4.9.1

package com.logstash;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ConfigLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		INPUT=1, FILTER=2, OUTPUT=3, COMMAT=4, LBRACE=5, RBRACE=6, LPAREN=7, RPAREN=8, 
		LBRACKET=9, RBRACKET=10, QMARK=11, HASHROCKET=12, GT=13, GE=14, LT=15, 
		LE=16, EQ=17, NEQ=18, BANG=19, COMA=20, IN=21, NOT=22, MATCH=23, NOT_MATCH=24, 
		AND=25, OR=26, XOR=27, NAND=28, IF=29, ELSE=30, STRING=31, REGEX=32, DECIMAL=33, 
		IDENTIFIER=34, WS=35, COMMENT=36;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"INPUT", "FILTER", "OUTPUT", "COMMAT", "LBRACE", "RBRACE", "LPAREN", 
			"RPAREN", "LBRACKET", "RBRACKET", "QMARK", "HASHROCKET", "GT", "GE", 
			"LT", "LE", "EQ", "NEQ", "BANG", "COMA", "IN", "NOT", "MATCH", "NOT_MATCH", 
			"AND", "OR", "XOR", "NAND", "IF", "ELSE", "NL", "HASH", "SLASH", "BSLASH", 
			"DQUOTE", "SQUOTE", "DQ_STRING", "SQ_STRING", "STRING", "FOCC", "RE_char", 
			"RE_alter", "RE_chgroup", "RE_quant", "RE_opt", "RE_star", "RE_plus", 
			"RE_occ", "RE_group", "RE_escape", "REGEX", "DECIMAL", "IDENTIFIER", 
			"WS", "COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'input'", "'filter'", "'output'", "'@'", "'{'", "'}'", "'('", 
			"')'", "'['", "']'", "'?'", "'=>'", "'>'", "'>='", "'<'", "'<='", "'=='", 
			"'!='", "'!'", "','", "'in'", "'not'", "'=~'", "'!~'", "'and'", "'or'", 
			"'xor'", "'nand'", "'if'", "'else'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "INPUT", "FILTER", "OUTPUT", "COMMAT", "LBRACE", "RBRACE", "LPAREN", 
			"RPAREN", "LBRACKET", "RBRACKET", "QMARK", "HASHROCKET", "GT", "GE", 
			"LT", "LE", "EQ", "NEQ", "BANG", "COMA", "IN", "NOT", "MATCH", "NOT_MATCH", 
			"AND", "OR", "XOR", "NAND", "IF", "ELSE", "STRING", "REGEX", "DECIMAL", 
			"IDENTIFIER", "WS", "COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ConfigLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Config.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2&\u01bf\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7"+
		"\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3"+
		"\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3"+
		"\24\3\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3"+
		"\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3"+
		"\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 "+
		"\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\7&\u00e0\n&\f&\16&\u00e3\13&\3"+
		"&\3&\3\'\3\'\7\'\u00e9\n\'\f\'\16\'\u00ec\13\'\3\'\3\'\3(\3(\5(\u00f2"+
		"\n(\3)\3)\7)\u00f6\n)\f)\16)\u00f9\13)\3)\7)\u00fc\n)\f)\16)\u00ff\13"+
		")\3)\7)\u0102\n)\f)\16)\u0105\13)\3)\3)\7)\u0109\n)\f)\16)\u010c\13)\3"+
		")\6)\u010f\n)\r)\16)\u0110\3)\6)\u0114\n)\r)\16)\u0115\3)\7)\u0119\n)"+
		"\f)\16)\u011c\13)\3)\5)\u011f\n)\5)\u0121\n)\3)\7)\u0124\n)\f)\16)\u0127"+
		"\13)\3)\3)\3*\3*\3+\3+\3+\3+\3+\3+\5+\u0133\n+\3+\3+\3+\6+\u0138\n+\r"+
		"+\16+\u0139\3,\3,\3,\6,\u013f\n,\r,\16,\u0140\3,\3,\3-\3-\3-\5-\u0148"+
		"\n-\3-\5-\u014b\n-\3.\3.\3.\3.\3.\3.\3.\5.\u0154\n.\3.\3.\3/\3/\3/\3/"+
		"\3/\3/\3/\5/\u015f\n/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\5\60\u016a"+
		"\n\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\5\61\u0175\n\61\3\61"+
		"\3\61\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\5\63\u0181\n\63\3\64\3\64"+
		"\3\64\3\64\3\64\3\64\3\64\3\64\3\64\7\64\u018c\n\64\f\64\16\64\u018f\13"+
		"\64\3\64\3\64\3\65\5\65\u0194\n\65\3\65\6\65\u0197\n\65\r\65\16\65\u0198"+
		"\3\65\3\65\6\65\u019d\n\65\r\65\16\65\u019e\5\65\u01a1\n\65\3\66\5\66"+
		"\u01a4\n\66\3\66\3\66\7\66\u01a8\n\66\f\66\16\66\u01ab\13\66\3\67\6\67"+
		"\u01ae\n\67\r\67\16\67\u01af\3\67\3\67\38\38\68\u01b6\n8\r8\168\u01b7"+
		"\38\38\58\u01bc\n8\38\38\3\u01b7\29\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n"+
		"\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\31\61\32\63\33\65\34\67\359\36;\37= ?\2A\2C\2E\2G\2I\2K\2M\2O!Q\2S\2"+
		"U\2W\2Y\2[\2]\2_\2a\2c\2e\2g\"i#k$m%o&\3\2\n\3\2$$\3\2))\3\2\62;\t\2$"+
		"$)-\61\61<<AA]_}\177\4\2\60\60yy\5\2C\\aac|\7\2//\62;C\\aac|\5\2\13\f"+
		"\16\17\"\"\2\u01df\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13"+
		"\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2"+
		"\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2"+
		"!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3"+
		"\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2"+
		"\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2O\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k"+
		"\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\3q\3\2\2\2\5w\3\2\2\2\7~\3\2\2\2\t\u0085"+
		"\3\2\2\2\13\u0087\3\2\2\2\r\u0089\3\2\2\2\17\u008b\3\2\2\2\21\u008d\3"+
		"\2\2\2\23\u008f\3\2\2\2\25\u0091\3\2\2\2\27\u0093\3\2\2\2\31\u0095\3\2"+
		"\2\2\33\u0098\3\2\2\2\35\u009a\3\2\2\2\37\u009d\3\2\2\2!\u009f\3\2\2\2"+
		"#\u00a2\3\2\2\2%\u00a5\3\2\2\2\'\u00a8\3\2\2\2)\u00aa\3\2\2\2+\u00ac\3"+
		"\2\2\2-\u00af\3\2\2\2/\u00b3\3\2\2\2\61\u00b6\3\2\2\2\63\u00b9\3\2\2\2"+
		"\65\u00bd\3\2\2\2\67\u00c0\3\2\2\29\u00c4\3\2\2\2;\u00c9\3\2\2\2=\u00cc"+
		"\3\2\2\2?\u00d1\3\2\2\2A\u00d3\3\2\2\2C\u00d5\3\2\2\2E\u00d7\3\2\2\2G"+
		"\u00d9\3\2\2\2I\u00db\3\2\2\2K\u00dd\3\2\2\2M\u00e6\3\2\2\2O\u00f1\3\2"+
		"\2\2Q\u00f3\3\2\2\2S\u012a\3\2\2\2U\u0137\3\2\2\2W\u013b\3\2\2\2Y\u0147"+
		"\3\2\2\2[\u0153\3\2\2\2]\u015e\3\2\2\2_\u0169\3\2\2\2a\u0174\3\2\2\2c"+
		"\u0178\3\2\2\2e\u017c\3\2\2\2g\u0182\3\2\2\2i\u0193\3\2\2\2k\u01a3\3\2"+
		"\2\2m\u01ad\3\2\2\2o\u01b3\3\2\2\2qr\7k\2\2rs\7p\2\2st\7r\2\2tu\7w\2\2"+
		"uv\7v\2\2v\4\3\2\2\2wx\7h\2\2xy\7k\2\2yz\7n\2\2z{\7v\2\2{|\7g\2\2|}\7"+
		"t\2\2}\6\3\2\2\2~\177\7q\2\2\177\u0080\7w\2\2\u0080\u0081\7v\2\2\u0081"+
		"\u0082\7r\2\2\u0082\u0083\7w\2\2\u0083\u0084\7v\2\2\u0084\b\3\2\2\2\u0085"+
		"\u0086\7B\2\2\u0086\n\3\2\2\2\u0087\u0088\7}\2\2\u0088\f\3\2\2\2\u0089"+
		"\u008a\7\177\2\2\u008a\16\3\2\2\2\u008b\u008c\7*\2\2\u008c\20\3\2\2\2"+
		"\u008d\u008e\7+\2\2\u008e\22\3\2\2\2\u008f\u0090\7]\2\2\u0090\24\3\2\2"+
		"\2\u0091\u0092\7_\2\2\u0092\26\3\2\2\2\u0093\u0094\7A\2\2\u0094\30\3\2"+
		"\2\2\u0095\u0096\7?\2\2\u0096\u0097\7@\2\2\u0097\32\3\2\2\2\u0098\u0099"+
		"\7@\2\2\u0099\34\3\2\2\2\u009a\u009b\7@\2\2\u009b\u009c\7?\2\2\u009c\36"+
		"\3\2\2\2\u009d\u009e\7>\2\2\u009e \3\2\2\2\u009f\u00a0\7>\2\2\u00a0\u00a1"+
		"\7?\2\2\u00a1\"\3\2\2\2\u00a2\u00a3\7?\2\2\u00a3\u00a4\7?\2\2\u00a4$\3"+
		"\2\2\2\u00a5\u00a6\7#\2\2\u00a6\u00a7\7?\2\2\u00a7&\3\2\2\2\u00a8\u00a9"+
		"\7#\2\2\u00a9(\3\2\2\2\u00aa\u00ab\7.\2\2\u00ab*\3\2\2\2\u00ac\u00ad\7"+
		"k\2\2\u00ad\u00ae\7p\2\2\u00ae,\3\2\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1"+
		"\7q\2\2\u00b1\u00b2\7v\2\2\u00b2.\3\2\2\2\u00b3\u00b4\7?\2\2\u00b4\u00b5"+
		"\7\u0080\2\2\u00b5\60\3\2\2\2\u00b6\u00b7\7#\2\2\u00b7\u00b8\7\u0080\2"+
		"\2\u00b8\62\3\2\2\2\u00b9\u00ba\7c\2\2\u00ba\u00bb\7p\2\2\u00bb\u00bc"+
		"\7f\2\2\u00bc\64\3\2\2\2\u00bd\u00be\7q\2\2\u00be\u00bf\7t\2\2\u00bf\66"+
		"\3\2\2\2\u00c0\u00c1\7z\2\2\u00c1\u00c2\7q\2\2\u00c2\u00c3\7t\2\2\u00c3"+
		"8\3\2\2\2\u00c4\u00c5\7p\2\2\u00c5\u00c6\7c\2\2\u00c6\u00c7\7p\2\2\u00c7"+
		"\u00c8\7f\2\2\u00c8:\3\2\2\2\u00c9\u00ca\7k\2\2\u00ca\u00cb\7h\2\2\u00cb"+
		"<\3\2\2\2\u00cc\u00cd\7g\2\2\u00cd\u00ce\7n\2\2\u00ce\u00cf\7u\2\2\u00cf"+
		"\u00d0\7g\2\2\u00d0>\3\2\2\2\u00d1\u00d2\7\f\2\2\u00d2@\3\2\2\2\u00d3"+
		"\u00d4\7%\2\2\u00d4B\3\2\2\2\u00d5\u00d6\7\61\2\2\u00d6D\3\2\2\2\u00d7"+
		"\u00d8\7^\2\2\u00d8F\3\2\2\2\u00d9\u00da\7$\2\2\u00daH\3\2\2\2\u00db\u00dc"+
		"\7)\2\2\u00dcJ\3\2\2\2\u00dd\u00e1\5G$\2\u00de\u00e0\n\2\2\2\u00df\u00de"+
		"\3\2\2\2\u00e0\u00e3\3\2\2\2\u00e1\u00df\3\2\2\2\u00e1\u00e2\3\2\2\2\u00e2"+
		"\u00e4\3\2\2\2\u00e3\u00e1\3\2\2\2\u00e4\u00e5\5G$\2\u00e5L\3\2\2\2\u00e6"+
		"\u00ea\5I%\2\u00e7\u00e9\n\3\2\2\u00e8\u00e7\3\2\2\2\u00e9\u00ec\3\2\2"+
		"\2\u00ea\u00e8\3\2\2\2\u00ea\u00eb\3\2\2\2\u00eb\u00ed\3\2\2\2\u00ec\u00ea"+
		"\3\2\2\2\u00ed\u00ee\5I%\2\u00eeN\3\2\2\2\u00ef\u00f2\5K&\2\u00f0\u00f2"+
		"\5M\'\2\u00f1\u00ef\3\2\2\2\u00f1\u00f0\3\2\2\2\u00f2P\3\2\2\2\u00f3\u00f7"+
		"\7}\2\2\u00f4\u00f6\5m\67\2\u00f5\u00f4\3\2\2\2\u00f6\u00f9\3\2\2\2\u00f7"+
		"\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8\u0120\3\2\2\2\u00f9\u00f7\3\2"+
		"\2\2\u00fa\u00fc\t\4\2\2\u00fb\u00fa\3\2\2\2\u00fc\u00ff\3\2\2\2\u00fd"+
		"\u00fb\3\2\2\2\u00fd\u00fe\3\2\2\2\u00fe\u0103\3\2\2\2\u00ff\u00fd\3\2"+
		"\2\2\u0100\u0102\5m\67\2\u0101\u0100\3\2\2\2\u0102\u0105\3\2\2\2\u0103"+
		"\u0101\3\2\2\2\u0103\u0104\3\2\2\2\u0104\u0106\3\2\2\2\u0105\u0103\3\2"+
		"\2\2\u0106\u010a\7.\2\2\u0107\u0109\5m\67\2\u0108\u0107\3\2\2\2\u0109"+
		"\u010c\3\2\2\2\u010a\u0108\3\2\2\2\u010a\u010b\3\2\2\2\u010b\u010e\3\2"+
		"\2\2\u010c\u010a\3\2\2\2\u010d\u010f\t\4\2\2\u010e\u010d\3\2\2\2\u010f"+
		"\u0110\3\2\2\2\u0110\u010e\3\2\2\2\u0110\u0111\3\2\2\2\u0111\u0121\3\2"+
		"\2\2\u0112\u0114\t\4\2\2\u0113\u0112\3\2\2\2\u0114\u0115\3\2\2\2\u0115"+
		"\u0113\3\2\2\2\u0115\u0116\3\2\2\2\u0116\u011a\3\2\2\2\u0117\u0119\5m"+
		"\67\2\u0118\u0117\3\2\2\2\u0119\u011c\3\2\2\2\u011a\u0118\3\2\2\2\u011a"+
		"\u011b\3\2\2\2\u011b\u011e\3\2\2\2\u011c\u011a\3\2\2\2\u011d\u011f\7."+
		"\2\2\u011e\u011d\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u0121\3\2\2\2\u0120"+
		"\u00fd\3\2\2\2\u0120\u0113\3\2\2\2\u0121\u0125\3\2\2\2\u0122\u0124\5m"+
		"\67\2\u0123\u0122\3\2\2\2\u0124\u0127\3\2\2\2\u0125\u0123\3\2\2\2\u0125"+
		"\u0126\3\2\2\2\u0126\u0128\3\2\2\2\u0127\u0125\3\2\2\2\u0128\u0129\7\177"+
		"\2\2\u0129R\3\2\2\2\u012a\u012b\n\5\2\2\u012bT\3\2\2\2\u012c\u0133\5S"+
		"*\2\u012d\u012e\7*\2\2\u012e\u012f\5g\64\2\u012f\u0130\7+\2\2\u0130\u0133"+
		"\3\2\2\2\u0131\u0133\5W,\2\u0132\u012c\3\2\2\2\u0132\u012d\3\2\2\2\u0132"+
		"\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134\u0135\7~\2\2\u0135\u0136\5g\64"+
		"\2\u0136\u0138\3\2\2\2\u0137\u0132\3\2\2\2\u0138\u0139\3\2\2\2\u0139\u0137"+
		"\3\2\2\2\u0139\u013a\3\2\2\2\u013aV\3\2\2\2\u013b\u013e\7]\2\2\u013c\u013f"+
		"\5S*\2\u013d\u013f\5e\63\2\u013e\u013c\3\2\2\2\u013e\u013d\3\2\2\2\u013f"+
		"\u0140\3\2\2\2\u0140\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u0142\3\2"+
		"\2\2\u0142\u0143\7_\2\2\u0143X\3\2\2\2\u0144\u0148\5]/\2\u0145\u0148\5"+
		"_\60\2\u0146\u0148\5a\61\2\u0147\u0144\3\2\2\2\u0147\u0145\3\2\2\2\u0147"+
		"\u0146\3\2\2\2\u0148\u014a\3\2\2\2\u0149\u014b\5\27\f\2\u014a\u0149\3"+
		"\2\2\2\u014a\u014b\3\2\2\2\u014bZ\3\2\2\2\u014c\u0154\5S*\2\u014d\u0154"+
		"\5W,\2\u014e\u0154\5e\63\2\u014f\u0150\7*\2\2\u0150\u0151\5g\64\2\u0151"+
		"\u0152\7+\2\2\u0152\u0154\3\2\2\2\u0153\u014c\3\2\2\2\u0153\u014d\3\2"+
		"\2\2\u0153\u014e\3\2\2\2\u0153\u014f\3\2\2\2\u0154\u0155\3\2\2\2\u0155"+
		"\u0156\7A\2\2\u0156\\\3\2\2\2\u0157\u015f\5S*\2\u0158\u015f\5W,\2\u0159"+
		"\u015f\5e\63\2\u015a\u015b\7*\2\2\u015b\u015c\5g\64\2\u015c\u015d\7+\2"+
		"\2\u015d\u015f\3\2\2\2\u015e\u0157\3\2\2\2\u015e\u0158\3\2\2\2\u015e\u0159"+
		"\3\2\2\2\u015e\u015a\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0161\7,\2\2\u0161"+
		"^\3\2\2\2\u0162\u016a\5S*\2\u0163\u016a\5W,\2\u0164\u016a\5e\63\2\u0165"+
		"\u0166\7*\2\2\u0166\u0167\5g\64\2\u0167\u0168\7+\2\2\u0168\u016a\3\2\2"+
		"\2\u0169\u0162\3\2\2\2\u0169\u0163\3\2\2\2\u0169\u0164\3\2\2\2\u0169\u0165"+
		"\3\2\2\2\u016a\u016b\3\2\2\2\u016b\u016c\7-\2\2\u016c`\3\2\2\2\u016d\u0175"+
		"\5S*\2\u016e\u0175\5W,\2\u016f\u0175\5e\63\2\u0170\u0171\7*\2\2\u0171"+
		"\u0172\5g\64\2\u0172\u0173\7+\2\2\u0173\u0175\3\2\2\2\u0174\u016d\3\2"+
		"\2\2\u0174\u016e\3\2\2\2\u0174\u016f\3\2\2\2\u0174\u0170\3\2\2\2\u0175"+
		"\u0176\3\2\2\2\u0176\u0177\5Q)\2\u0177b\3\2\2\2\u0178\u0179\7*\2\2\u0179"+
		"\u017a\5g\64\2\u017a\u017b\7+\2\2\u017bd\3\2\2\2\u017c\u0180\5E#\2\u017d"+
		"\u0181\5E#\2\u017e\u0181\5C\"\2\u017f\u0181\t\6\2\2\u0180\u017d\3\2\2"+
		"\2\u0180\u017e\3\2\2\2\u0180\u017f\3\2\2\2\u0181f\3\2\2\2\u0182\u018d"+
		"\5C\"\2\u0183\u018c\7\60\2\2\u0184\u018c\5S*\2\u0185\u018c\5U+\2\u0186"+
		"\u018c\5W,\2\u0187\u018c\5[.\2\u0188\u018c\5Y-\2\u0189\u018c\5c\62\2\u018a"+
		"\u018c\5e\63\2\u018b\u0183\3\2\2\2\u018b\u0184\3\2\2\2\u018b\u0185\3\2"+
		"\2\2\u018b\u0186\3\2\2\2\u018b\u0187\3\2\2\2\u018b\u0188\3\2\2\2\u018b"+
		"\u0189\3\2\2\2\u018b\u018a\3\2\2\2\u018c\u018f\3\2\2\2\u018d\u018b\3\2"+
		"\2\2\u018d\u018e\3\2\2\2\u018e\u0190\3\2\2\2\u018f\u018d\3\2\2\2\u0190"+
		"\u0191\5C\"\2\u0191h\3\2\2\2\u0192\u0194\7/\2\2\u0193\u0192\3\2\2\2\u0193"+
		"\u0194\3\2\2\2\u0194\u0196\3\2\2\2\u0195\u0197\t\4\2\2\u0196\u0195\3\2"+
		"\2\2\u0197\u0198\3\2\2\2\u0198\u0196\3\2\2\2\u0198\u0199\3\2\2\2\u0199"+
		"\u01a0\3\2\2\2\u019a\u019c\7\60\2\2\u019b\u019d\t\4\2\2\u019c\u019b\3"+
		"\2\2\2\u019d\u019e\3\2\2\2\u019e\u019c\3\2\2\2\u019e\u019f\3\2\2\2\u019f"+
		"\u01a1\3\2\2\2\u01a0\u019a\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1j\3\2\2\2"+
		"\u01a2\u01a4\5\t\5\2\u01a3\u01a2\3\2\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01a5"+
		"\3\2\2\2\u01a5\u01a9\t\7\2\2\u01a6\u01a8\t\b\2\2\u01a7\u01a6\3\2\2\2\u01a8"+
		"\u01ab\3\2\2\2\u01a9\u01a7\3\2\2\2\u01a9\u01aa\3\2\2\2\u01aal\3\2\2\2"+
		"\u01ab\u01a9\3\2\2\2\u01ac\u01ae\t\t\2\2\u01ad\u01ac\3\2\2\2\u01ae\u01af"+
		"\3\2\2\2\u01af\u01ad\3\2\2\2\u01af\u01b0\3\2\2\2\u01b0\u01b1\3\2\2\2\u01b1"+
		"\u01b2\b\67\2\2\u01b2n\3\2\2\2\u01b3\u01b5\5A!\2\u01b4\u01b6\13\2\2\2"+
		"\u01b5\u01b4\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b7\u01b5"+
		"\3\2\2\2\u01b8\u01bb\3\2\2\2\u01b9\u01bc\5? \2\u01ba\u01bc\7\2\2\3\u01bb"+
		"\u01b9\3\2\2\2\u01bb\u01ba\3\2\2\2\u01bc\u01bd\3\2\2\2\u01bd\u01be\b8"+
		"\2\2\u01bep\3\2\2\2&\2\u00e1\u00ea\u00f1\u00f7\u00fd\u0103\u010a\u0110"+
		"\u0115\u011a\u011e\u0120\u0125\u0132\u0139\u013e\u0140\u0147\u014a\u0153"+
		"\u015e\u0169\u0174\u0180\u018b\u018d\u0193\u0198\u019e\u01a0\u01a3\u01a9"+
		"\u01af\u01b7\u01bb\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}