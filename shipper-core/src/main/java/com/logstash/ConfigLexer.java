// Generated from C:\Users\luca\devel\shipper\shipper-core/antlr/Config.g4 by ANTLR 4.9.1

package com.logstash;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ConfigLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, INPUT=2, FILTER=3, OUTPUT=4, COMMAT=5, LBRACE=6, RBRACE=7, LPAREN=8, 
		RPAREN=9, LBRACKET=10, RBRACKET=11, QMARK=12, HASHROCKET=13, GT=14, GE=15, 
		LT=16, LE=17, EQ=18, NEQ=19, BANG=20, COMA=21, IN=22, NOT=23, MATCH=24, 
		NOT_MATCH=25, AND=26, OR=27, XOR=28, NAND=29, IF=30, ELSE=31, STRING=32, 
		REGEX=33, DECIMAL=34, IDENTIFIER=35, WS=36, COMMENT=37;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "INPUT", "FILTER", "OUTPUT", "COMMAT", "LBRACE", "RBRACE", "LPAREN", 
			"RPAREN", "LBRACKET", "RBRACKET", "QMARK", "HASHROCKET", "GT", "GE", 
			"LT", "LE", "EQ", "NEQ", "BANG", "COMA", "IN", "NOT", "MATCH", "NOT_MATCH", 
			"AND", "OR", "XOR", "NAND", "IF", "ELSE", "NL", "HASH", "SLASH", "BSLASH", 
			"DQUOTE", "SQUOTE", "DQ_STRING", "SQ_STRING", "STRING", "FOCC", "RE_char", 
			"RE_alter", "RE_chgroup", "RE_quant", "RE_opt", "RE_star", "RE_plus", 
			"RE_occ", "RE_group", "RE_escape", "REGEX", "DECIMAL", "IDENTIFIER", 
			"WS", "COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'exit'", "'input'", "'filter'", "'output'", "'@'", "'{'", "'}'", 
			"'('", "')'", "'['", "']'", "'?'", "'=>'", "'>'", "'>='", "'<'", "'<='", 
			"'=='", "'!='", "'!'", "','", "'in'", "'not'", "'=~'", "'!~'", "'and'", 
			"'or'", "'xor'", "'nand'", "'if'", "'else'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, "INPUT", "FILTER", "OUTPUT", "COMMAT", "LBRACE", "RBRACE", 
			"LPAREN", "RPAREN", "LBRACKET", "RBRACKET", "QMARK", "HASHROCKET", "GT", 
			"GE", "LT", "LE", "EQ", "NEQ", "BANG", "COMA", "IN", "NOT", "MATCH", 
			"NOT_MATCH", "AND", "OR", "XOR", "NAND", "IF", "ELSE", "STRING", "REGEX", 
			"DECIMAL", "IDENTIFIER", "WS", "COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ConfigLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Config.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\'\u01c6\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3\2\3\2\3\2\3\2\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3"+
		"\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3"+
		"\r\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3"+
		"\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\30\3"+
		"\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3"+
		"\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3"+
		" \3 \3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\7\'\u00e7"+
		"\n\'\f\'\16\'\u00ea\13\'\3\'\3\'\3(\3(\7(\u00f0\n(\f(\16(\u00f3\13(\3"+
		"(\3(\3)\3)\5)\u00f9\n)\3*\3*\7*\u00fd\n*\f*\16*\u0100\13*\3*\7*\u0103"+
		"\n*\f*\16*\u0106\13*\3*\7*\u0109\n*\f*\16*\u010c\13*\3*\3*\7*\u0110\n"+
		"*\f*\16*\u0113\13*\3*\6*\u0116\n*\r*\16*\u0117\3*\6*\u011b\n*\r*\16*\u011c"+
		"\3*\7*\u0120\n*\f*\16*\u0123\13*\3*\5*\u0126\n*\5*\u0128\n*\3*\7*\u012b"+
		"\n*\f*\16*\u012e\13*\3*\3*\3+\3+\3,\3,\3,\3,\3,\3,\5,\u013a\n,\3,\3,\3"+
		",\6,\u013f\n,\r,\16,\u0140\3-\3-\3-\6-\u0146\n-\r-\16-\u0147\3-\3-\3."+
		"\3.\3.\5.\u014f\n.\3.\5.\u0152\n.\3/\3/\3/\3/\3/\3/\3/\5/\u015b\n/\3/"+
		"\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\5\60\u0166\n\60\3\60\3\60\3\61"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\5\61\u0171\n\61\3\61\3\61\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\5\62\u017c\n\62\3\62\3\62\3\63\3\63\3\63\3\63\3\64"+
		"\3\64\3\64\3\64\5\64\u0188\n\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65"+
		"\3\65\7\65\u0193\n\65\f\65\16\65\u0196\13\65\3\65\3\65\3\66\5\66\u019b"+
		"\n\66\3\66\6\66\u019e\n\66\r\66\16\66\u019f\3\66\3\66\6\66\u01a4\n\66"+
		"\r\66\16\66\u01a5\5\66\u01a8\n\66\3\67\5\67\u01ab\n\67\3\67\3\67\7\67"+
		"\u01af\n\67\f\67\16\67\u01b2\13\67\38\68\u01b5\n8\r8\168\u01b6\38\38\3"+
		"9\39\69\u01bd\n9\r9\169\u01be\39\39\59\u01c3\n9\39\39\3\u01be\2:\3\3\5"+
		"\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"+
		"A\2C\2E\2G\2I\2K\2M\2O\2Q\"S\2U\2W\2Y\2[\2]\2_\2a\2c\2e\2g\2i#k$m%o&q"+
		"\'\3\2\n\3\2$$\3\2))\3\2\62;\t\2$$)-\61\61<<AA]_}\177\4\2\60\60yy\5\2"+
		"C\\aac|\7\2//\62;C\\aac|\5\2\13\f\16\17\"\"\2\u01e6\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2Q\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3"+
		"\2\2\2\3s\3\2\2\2\5x\3\2\2\2\7~\3\2\2\2\t\u0085\3\2\2\2\13\u008c\3\2\2"+
		"\2\r\u008e\3\2\2\2\17\u0090\3\2\2\2\21\u0092\3\2\2\2\23\u0094\3\2\2\2"+
		"\25\u0096\3\2\2\2\27\u0098\3\2\2\2\31\u009a\3\2\2\2\33\u009c\3\2\2\2\35"+
		"\u009f\3\2\2\2\37\u00a1\3\2\2\2!\u00a4\3\2\2\2#\u00a6\3\2\2\2%\u00a9\3"+
		"\2\2\2\'\u00ac\3\2\2\2)\u00af\3\2\2\2+\u00b1\3\2\2\2-\u00b3\3\2\2\2/\u00b6"+
		"\3\2\2\2\61\u00ba\3\2\2\2\63\u00bd\3\2\2\2\65\u00c0\3\2\2\2\67\u00c4\3"+
		"\2\2\29\u00c7\3\2\2\2;\u00cb\3\2\2\2=\u00d0\3\2\2\2?\u00d3\3\2\2\2A\u00d8"+
		"\3\2\2\2C\u00da\3\2\2\2E\u00dc\3\2\2\2G\u00de\3\2\2\2I\u00e0\3\2\2\2K"+
		"\u00e2\3\2\2\2M\u00e4\3\2\2\2O\u00ed\3\2\2\2Q\u00f8\3\2\2\2S\u00fa\3\2"+
		"\2\2U\u0131\3\2\2\2W\u013e\3\2\2\2Y\u0142\3\2\2\2[\u014e\3\2\2\2]\u015a"+
		"\3\2\2\2_\u0165\3\2\2\2a\u0170\3\2\2\2c\u017b\3\2\2\2e\u017f\3\2\2\2g"+
		"\u0183\3\2\2\2i\u0189\3\2\2\2k\u019a\3\2\2\2m\u01aa\3\2\2\2o\u01b4\3\2"+
		"\2\2q\u01ba\3\2\2\2st\7g\2\2tu\7z\2\2uv\7k\2\2vw\7v\2\2w\4\3\2\2\2xy\7"+
		"k\2\2yz\7p\2\2z{\7r\2\2{|\7w\2\2|}\7v\2\2}\6\3\2\2\2~\177\7h\2\2\177\u0080"+
		"\7k\2\2\u0080\u0081\7n\2\2\u0081\u0082\7v\2\2\u0082\u0083\7g\2\2\u0083"+
		"\u0084\7t\2\2\u0084\b\3\2\2\2\u0085\u0086\7q\2\2\u0086\u0087\7w\2\2\u0087"+
		"\u0088\7v\2\2\u0088\u0089\7r\2\2\u0089\u008a\7w\2\2\u008a\u008b\7v\2\2"+
		"\u008b\n\3\2\2\2\u008c\u008d\7B\2\2\u008d\f\3\2\2\2\u008e\u008f\7}\2\2"+
		"\u008f\16\3\2\2\2\u0090\u0091\7\177\2\2\u0091\20\3\2\2\2\u0092\u0093\7"+
		"*\2\2\u0093\22\3\2\2\2\u0094\u0095\7+\2\2\u0095\24\3\2\2\2\u0096\u0097"+
		"\7]\2\2\u0097\26\3\2\2\2\u0098\u0099\7_\2\2\u0099\30\3\2\2\2\u009a\u009b"+
		"\7A\2\2\u009b\32\3\2\2\2\u009c\u009d\7?\2\2\u009d\u009e\7@\2\2\u009e\34"+
		"\3\2\2\2\u009f\u00a0\7@\2\2\u00a0\36\3\2\2\2\u00a1\u00a2\7@\2\2\u00a2"+
		"\u00a3\7?\2\2\u00a3 \3\2\2\2\u00a4\u00a5\7>\2\2\u00a5\"\3\2\2\2\u00a6"+
		"\u00a7\7>\2\2\u00a7\u00a8\7?\2\2\u00a8$\3\2\2\2\u00a9\u00aa\7?\2\2\u00aa"+
		"\u00ab\7?\2\2\u00ab&\3\2\2\2\u00ac\u00ad\7#\2\2\u00ad\u00ae\7?\2\2\u00ae"+
		"(\3\2\2\2\u00af\u00b0\7#\2\2\u00b0*\3\2\2\2\u00b1\u00b2\7.\2\2\u00b2,"+
		"\3\2\2\2\u00b3\u00b4\7k\2\2\u00b4\u00b5\7p\2\2\u00b5.\3\2\2\2\u00b6\u00b7"+
		"\7p\2\2\u00b7\u00b8\7q\2\2\u00b8\u00b9\7v\2\2\u00b9\60\3\2\2\2\u00ba\u00bb"+
		"\7?\2\2\u00bb\u00bc\7\u0080\2\2\u00bc\62\3\2\2\2\u00bd\u00be\7#\2\2\u00be"+
		"\u00bf\7\u0080\2\2\u00bf\64\3\2\2\2\u00c0\u00c1\7c\2\2\u00c1\u00c2\7p"+
		"\2\2\u00c2\u00c3\7f\2\2\u00c3\66\3\2\2\2\u00c4\u00c5\7q\2\2\u00c5\u00c6"+
		"\7t\2\2\u00c68\3\2\2\2\u00c7\u00c8\7z\2\2\u00c8\u00c9\7q\2\2\u00c9\u00ca"+
		"\7t\2\2\u00ca:\3\2\2\2\u00cb\u00cc\7p\2\2\u00cc\u00cd\7c\2\2\u00cd\u00ce"+
		"\7p\2\2\u00ce\u00cf\7f\2\2\u00cf<\3\2\2\2\u00d0\u00d1\7k\2\2\u00d1\u00d2"+
		"\7h\2\2\u00d2>\3\2\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7n\2\2\u00d5\u00d6"+
		"\7u\2\2\u00d6\u00d7\7g\2\2\u00d7@\3\2\2\2\u00d8\u00d9\7\f\2\2\u00d9B\3"+
		"\2\2\2\u00da\u00db\7%\2\2\u00dbD\3\2\2\2\u00dc\u00dd\7\61\2\2\u00ddF\3"+
		"\2\2\2\u00de\u00df\7^\2\2\u00dfH\3\2\2\2\u00e0\u00e1\7$\2\2\u00e1J\3\2"+
		"\2\2\u00e2\u00e3\7)\2\2\u00e3L\3\2\2\2\u00e4\u00e8\5I%\2\u00e5\u00e7\n"+
		"\2\2\2\u00e6\u00e5\3\2\2\2\u00e7\u00ea\3\2\2\2\u00e8\u00e6\3\2\2\2\u00e8"+
		"\u00e9\3\2\2\2\u00e9\u00eb\3\2\2\2\u00ea\u00e8\3\2\2\2\u00eb\u00ec\5I"+
		"%\2\u00ecN\3\2\2\2\u00ed\u00f1\5K&\2\u00ee\u00f0\n\3\2\2\u00ef\u00ee\3"+
		"\2\2\2\u00f0\u00f3\3\2\2\2\u00f1\u00ef\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2"+
		"\u00f4\3\2\2\2\u00f3\u00f1\3\2\2\2\u00f4\u00f5\5K&\2\u00f5P\3\2\2\2\u00f6"+
		"\u00f9\5M\'\2\u00f7\u00f9\5O(\2\u00f8\u00f6\3\2\2\2\u00f8\u00f7\3\2\2"+
		"\2\u00f9R\3\2\2\2\u00fa\u00fe\7}\2\2\u00fb\u00fd\5o8\2\u00fc\u00fb\3\2"+
		"\2\2\u00fd\u0100\3\2\2\2\u00fe\u00fc\3\2\2\2\u00fe\u00ff\3\2\2\2\u00ff"+
		"\u0127\3\2\2\2\u0100\u00fe\3\2\2\2\u0101\u0103\t\4\2\2\u0102\u0101\3\2"+
		"\2\2\u0103\u0106\3\2\2\2\u0104\u0102\3\2\2\2\u0104\u0105\3\2\2\2\u0105"+
		"\u010a\3\2\2\2\u0106\u0104\3\2\2\2\u0107\u0109\5o8\2\u0108\u0107\3\2\2"+
		"\2\u0109\u010c\3\2\2\2\u010a\u0108\3\2\2\2\u010a\u010b\3\2\2\2\u010b\u010d"+
		"\3\2\2\2\u010c\u010a\3\2\2\2\u010d\u0111\7.\2\2\u010e\u0110\5o8\2\u010f"+
		"\u010e\3\2\2\2\u0110\u0113\3\2\2\2\u0111\u010f\3\2\2\2\u0111\u0112\3\2"+
		"\2\2\u0112\u0115\3\2\2\2\u0113\u0111\3\2\2\2\u0114\u0116\t\4\2\2\u0115"+
		"\u0114\3\2\2\2\u0116\u0117\3\2\2\2\u0117\u0115\3\2\2\2\u0117\u0118\3\2"+
		"\2\2\u0118\u0128\3\2\2\2\u0119\u011b\t\4\2\2\u011a\u0119\3\2\2\2\u011b"+
		"\u011c\3\2\2\2\u011c\u011a\3\2\2\2\u011c\u011d\3\2\2\2\u011d\u0121\3\2"+
		"\2\2\u011e\u0120\5o8\2\u011f\u011e\3\2\2\2\u0120\u0123\3\2\2\2\u0121\u011f"+
		"\3\2\2\2\u0121\u0122\3\2\2\2\u0122\u0125\3\2\2\2\u0123\u0121\3\2\2\2\u0124"+
		"\u0126\7.\2\2\u0125\u0124\3\2\2\2\u0125\u0126\3\2\2\2\u0126\u0128\3\2"+
		"\2\2\u0127\u0104\3\2\2\2\u0127\u011a\3\2\2\2\u0128\u012c\3\2\2\2\u0129"+
		"\u012b\5o8\2\u012a\u0129\3\2\2\2\u012b\u012e\3\2\2\2\u012c\u012a\3\2\2"+
		"\2\u012c\u012d\3\2\2\2\u012d\u012f\3\2\2\2\u012e\u012c\3\2\2\2\u012f\u0130"+
		"\7\177\2\2\u0130T\3\2\2\2\u0131\u0132\n\5\2\2\u0132V\3\2\2\2\u0133\u013a"+
		"\5U+\2\u0134\u0135\7*\2\2\u0135\u0136\5i\65\2\u0136\u0137\7+\2\2\u0137"+
		"\u013a\3\2\2\2\u0138\u013a\5Y-\2\u0139\u0133\3\2\2\2\u0139\u0134\3\2\2"+
		"\2\u0139\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u013c\7~\2\2\u013c\u013d"+
		"\5i\65\2\u013d\u013f\3\2\2\2\u013e\u0139\3\2\2\2\u013f\u0140\3\2\2\2\u0140"+
		"\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141X\3\2\2\2\u0142\u0145\7]\2\2\u0143"+
		"\u0146\5U+\2\u0144\u0146\5g\64\2\u0145\u0143\3\2\2\2\u0145\u0144\3\2\2"+
		"\2\u0146\u0147\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148\u0149"+
		"\3\2\2\2\u0149\u014a\7_\2\2\u014aZ\3\2\2\2\u014b\u014f\5_\60\2\u014c\u014f"+
		"\5a\61\2\u014d\u014f\5c\62\2\u014e\u014b\3\2\2\2\u014e\u014c\3\2\2\2\u014e"+
		"\u014d\3\2\2\2\u014f\u0151\3\2\2\2\u0150\u0152\5\31\r\2\u0151\u0150\3"+
		"\2\2\2\u0151\u0152\3\2\2\2\u0152\\\3\2\2\2\u0153\u015b\5U+\2\u0154\u015b"+
		"\5Y-\2\u0155\u015b\5g\64\2\u0156\u0157\7*\2\2\u0157\u0158\5i\65\2\u0158"+
		"\u0159\7+\2\2\u0159\u015b\3\2\2\2\u015a\u0153\3\2\2\2\u015a\u0154\3\2"+
		"\2\2\u015a\u0155\3\2\2\2\u015a\u0156\3\2\2\2\u015b\u015c\3\2\2\2\u015c"+
		"\u015d\7A\2\2\u015d^\3\2\2\2\u015e\u0166\5U+\2\u015f\u0166\5Y-\2\u0160"+
		"\u0166\5g\64\2\u0161\u0162\7*\2\2\u0162\u0163\5i\65\2\u0163\u0164\7+\2"+
		"\2\u0164\u0166\3\2\2\2\u0165\u015e\3\2\2\2\u0165\u015f\3\2\2\2\u0165\u0160"+
		"\3\2\2\2\u0165\u0161\3\2\2\2\u0166\u0167\3\2\2\2\u0167\u0168\7,\2\2\u0168"+
		"`\3\2\2\2\u0169\u0171\5U+\2\u016a\u0171\5Y-\2\u016b\u0171\5g\64\2\u016c"+
		"\u016d\7*\2\2\u016d\u016e\5i\65\2\u016e\u016f\7+\2\2\u016f\u0171\3\2\2"+
		"\2\u0170\u0169\3\2\2\2\u0170\u016a\3\2\2\2\u0170\u016b\3\2\2\2\u0170\u016c"+
		"\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0173\7-\2\2\u0173b\3\2\2\2\u0174\u017c"+
		"\5U+\2\u0175\u017c\5Y-\2\u0176\u017c\5g\64\2\u0177\u0178\7*\2\2\u0178"+
		"\u0179\5i\65\2\u0179\u017a\7+\2\2\u017a\u017c\3\2\2\2\u017b\u0174\3\2"+
		"\2\2\u017b\u0175\3\2\2\2\u017b\u0176\3\2\2\2\u017b\u0177\3\2\2\2\u017c"+
		"\u017d\3\2\2\2\u017d\u017e\5S*\2\u017ed\3\2\2\2\u017f\u0180\7*\2\2\u0180"+
		"\u0181\5i\65\2\u0181\u0182\7+\2\2\u0182f\3\2\2\2\u0183\u0187\5G$\2\u0184"+
		"\u0188\5G$\2\u0185\u0188\5E#\2\u0186\u0188\t\6\2\2\u0187\u0184\3\2\2\2"+
		"\u0187\u0185\3\2\2\2\u0187\u0186\3\2\2\2\u0188h\3\2\2\2\u0189\u0194\5"+
		"E#\2\u018a\u0193\7\60\2\2\u018b\u0193\5U+\2\u018c\u0193\5W,\2\u018d\u0193"+
		"\5Y-\2\u018e\u0193\5]/\2\u018f\u0193\5[.\2\u0190\u0193\5e\63\2\u0191\u0193"+
		"\5g\64\2\u0192\u018a\3\2\2\2\u0192\u018b\3\2\2\2\u0192\u018c\3\2\2\2\u0192"+
		"\u018d\3\2\2\2\u0192\u018e\3\2\2\2\u0192\u018f\3\2\2\2\u0192\u0190\3\2"+
		"\2\2\u0192\u0191\3\2\2\2\u0193\u0196\3\2\2\2\u0194\u0192\3\2\2\2\u0194"+
		"\u0195\3\2\2\2\u0195\u0197\3\2\2\2\u0196\u0194\3\2\2\2\u0197\u0198\5E"+
		"#\2\u0198j\3\2\2\2\u0199\u019b\7/\2\2\u019a\u0199\3\2\2\2\u019a\u019b"+
		"\3\2\2\2\u019b\u019d\3\2\2\2\u019c\u019e\t\4\2\2\u019d\u019c\3\2\2\2\u019e"+
		"\u019f\3\2\2\2\u019f\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0\u01a7\3\2"+
		"\2\2\u01a1\u01a3\7\60\2\2\u01a2\u01a4\t\4\2\2\u01a3\u01a2\3\2\2\2\u01a4"+
		"\u01a5\3\2\2\2\u01a5\u01a3\3\2\2\2\u01a5\u01a6\3\2\2\2\u01a6\u01a8\3\2"+
		"\2\2\u01a7\u01a1\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8l\3\2\2\2\u01a9\u01ab"+
		"\5\13\6\2\u01aa\u01a9\3\2\2\2\u01aa\u01ab\3\2\2\2\u01ab\u01ac\3\2\2\2"+
		"\u01ac\u01b0\t\7\2\2\u01ad\u01af\t\b\2\2\u01ae\u01ad\3\2\2\2\u01af\u01b2"+
		"\3\2\2\2\u01b0\u01ae\3\2\2\2\u01b0\u01b1\3\2\2\2\u01b1n\3\2\2\2\u01b2"+
		"\u01b0\3\2\2\2\u01b3\u01b5\t\t\2\2\u01b4\u01b3\3\2\2\2\u01b5\u01b6\3\2"+
		"\2\2\u01b6\u01b4\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b8"+
		"\u01b9\b8\2\2\u01b9p\3\2\2\2\u01ba\u01bc\5C\"\2\u01bb\u01bd\13\2\2\2\u01bc"+
		"\u01bb\3\2\2\2\u01bd\u01be\3\2\2\2\u01be\u01bf\3\2\2\2\u01be\u01bc\3\2"+
		"\2\2\u01bf\u01c2\3\2\2\2\u01c0\u01c3\5A!\2\u01c1\u01c3\7\2\2\3\u01c2\u01c0"+
		"\3\2\2\2\u01c2\u01c1\3\2\2\2\u01c3\u01c4\3\2\2\2\u01c4\u01c5\b9\2\2\u01c5"+
		"r\3\2\2\2&\2\u00e8\u00f1\u00f8\u00fe\u0104\u010a\u0111\u0117\u011c\u0121"+
		"\u0125\u0127\u012c\u0139\u0140\u0145\u0147\u014e\u0151\u015a\u0165\u0170"+
		"\u017b\u0187\u0192\u0194\u019a\u019f\u01a5\u01a7\u01aa\u01b0\u01b6\u01be"+
		"\u01c2\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}